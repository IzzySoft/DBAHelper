#--------------------------------------------------[ Check what GUI to use ]---
if [ $USEDIALOG -eq 1 -a $SILENT -lt 2 ]; then
  DIALOG=`which dialog`
  if [ $? -eq 0 ]; then
    . ${BINDIR}/mods/dialog.lib
  else
    . ${BINDIR}/mods/ansi.lib
    unset DIALOG
  fi
else
  . ${BINDIR}/mods/ansi.lib
fi

#-----------------------------------------[ Obtain the current window size ]---
function winsize {
  win_x=`stty size|awk '{print $2}'`
  win_y=`stty size|awk '{print $1}'`
  typeset i win_x
  typeset i win_y
}

#---------------------------------[ Run or display CMD depending on DRYRUN ]---
# $1 - CMD
# $2 - Scriptfile to display when in dryrun
# $3 - Title for tailbox (if not given - no tailbox
# $4 - Timeout for tailbox (not given - no timeout)
# $5 - additional parm, e.g. "nospool" for commands like "echo $var>file"
function runcmd {
  if [ $DRYRUN -eq 0 ]; then
    NOSPOOL=0
    [ -n "$5" ] && {
      case "$5" in
        nospool) NOSPOOL=1
      esac
    }
    [ -n "$3" ] && {
      WINTITLE="$3"
      local TB="| tailbox $SPOOLFILE $4 2>/dev/null"
    }
    touch $SPOOLFILE
    case $SILENT in
      0) cmd="$1 |tee -a $SPOOLFILE";;
      1) if [ $NOSPOOL -gt 0 ]; then
           cmd="$1"
         else
	   cmd="$1 > $SPOOLFILE $TB"
	 fi
	 ;;
      2|3) if [ $NOSPOOL -gt 0 ]; then
             cmd="$1"
           else
	     cmd="$1 &> $SPOOLFILE"
	   fi
	   ;;
    esac
    eval $cmd
  else
    SILENT=0
    echo "Running command:">$SPOOLFILE
    echo "$1">>$SPOOLFILE
    [ -n "$2" ] && {
      echo >>$SPOOLFILE
      echo "Scriptfile content:">>$SPOOLFILE
      cat $2>>$SPOOLFILE
    }
    textbox "$SPOOLFILE"
    cat /dev/null>$SPOOLFILE
    return 0
  fi
}

#-------------------------------------------------[ Read & Verify Password ]---
function readpass {
  password "$1"
  pass1=$res
  password "Repeat password:"
  pass2=$res
  [ "$pass1" != "$pass2" ] && readpass "Passwords are not identical.\n$1"
}

#-------------------------------------------------------------[ Disclaimer ]---
function disclaimer() {
  if [ -e "disclaimer.txt" ]; then
    DISCLAIM="disclaimer.txt"
  elif [ -e "doc/disclaimer.txt" ]; then
    DISCLAIM="doc/disclaimer.txt"
  else
    message "DISCLAIMER\n==========\n
            \nThis software is protected by the GNU Public License (GPL) - which
            means a.o. it comes to you free of charge. But it also means it comes
            \"AS IS\", i.e. WITHOUT ANY WARRANTY (see §§11 & 12 of the GPL document,
            which is usually shipped along with the software in a file usually
            named something like \"License\"). Again: Neither the programmer nor
            the vendor will be responsible for any kind of damage caused by this
            software - explicitly or implicitely - if not explicitly stated so
            somewhere else. You use this software completly ON YOUR OWN RISK."
    return 0
  fi
  textbox "$DISCLAIM"
}
